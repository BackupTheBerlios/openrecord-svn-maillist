From skinner at berlios.de  Thu Mar  2 23:02:49 2006
From: skinner at berlios.de (skinner at BerliOS)
Date: Thu, 2 Mar 2006 23:02:49 +0100
Subject: [openrecord-svn] r456 - trunk/documentation
Message-ID: <200603022202.k22M2nMG015169@sheep.berlios.de>

Author: skinner
Date: 2006-03-02 23:02:48 +0100 (Thu, 02 Mar 2006)
New Revision: 456

Modified:
   trunk/documentation/to_do_history.txt
   trunk/documentation/to_do_list.txt
Log:
to-do list updates

Modified: trunk/documentation/to_do_history.txt
===================================================================
--- trunk/documentation/to_do_history.txt	2006-02-27 19:49:15 UTC (rev 455)
+++ trunk/documentation/to_do_history.txt	2006-03-02 22:02:48 UTC (rev 456)
@@ -474,7 +474,7 @@
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      Summary of Iteration #8
           December 2005
-  December 5 to January 2, 2005
+December 5, 2005 to January 2, 2006
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    8    = number of PLANNED tasks that were finished 
    2    = number of ADDITIONAL tasks that were finished 
@@ -520,7 +520,7 @@
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      Summary of Iteration #9
           January 2006
-  January 2 to February 6, 2005
+  January 2 to February 6, 2006
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    1    = number of PLANNED tasks that were finished 
    3    = number of ADDITIONAL tasks that were finished 
@@ -547,6 +547,12 @@
 -------+----------+---------+----------------------------------------------
 Who    | Estimate | Actual  | Task
 -------+----------+---------+----------------------------------------------
+brian  |          | 0.15 IED| 422. Replace all use of orp.uuid with dojo.uuid, and remove orp.uuid from our tree
+brian  |          | 0.25 IED| 511. Assign system attributes & categories to a "System" category
+brian  |          | 0.25 IED| 512. Hide "System" items most of the time
+brian  |          | 0.25 IED| 519. improve UI for setting the expected data type of an attribute
+brian  | 3    IED | 4    IED| 308. Make screencasts about OpenRecord (and plugins) see: .swf, .mov, SnapZ Pro, Camtesia Studio, Windows Media Encoder 9 Series
+patricia          | 0.6  IED| 308. Make screencasts about OpenRecord (and plugins) see: .swf, .mov, SnapZ Pro, Camtesia Studio, Windows Media Encoder 9 Series
 -------+----------+---------+----------------------------------------------
 
 
@@ -555,8 +561,59 @@
 -------+----------+---------+----------------------------------------------
 Who    | Estimate | Actual  | Task
 -------+----------+---------+----------------------------------------------
-brian  |          | 1    IED|  0. switch from dojo rev-2540 to dojo rev-3024
-mignon |          | 1    IED|  0. switch from dojo rev-2540 to dojo rev-3024
+brian  |          | 0.25 IED|   0. context menu to remove table columns
+mignon and brian  | 2    IED|   0. switch from dojo rev-2540 to dojo rev-3024
+mignon |          | 1    IED| 424. Fix the unit tests in tests/view/SectionViewConstructorTest.js
 -------+----------+---------+----------------------------------------------
 
 
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+     Summary of Iteration #10
+          February 2006
+  February 6 to March 6, 2006
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+   5    = number of PLANNED tasks that were finished 
+   3    = number of ADDITIONAL tasks that were finished 
+ ~ 8.75 = total estimated IEDs for PLANNED and ADDITIONAL tasks that were finished
+   4    = number of weeks in February iteration
+ ~ 2.2  = Velocity (in estimated IEDs per week)
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+
+
+
+################################################################################
+################################################################################
+##                                                                            ##
+##                                Iteration #11                               ##
+##                                 March 2006                                 ##
+##                                                                            ##
+################################################################################
+################################################################################
+
+
+---------------------------------------------------------------------------
+   Tasks we originally identified for Iteration #11, in March 2006
+-------+----------+---------+----------------------------------------------
+Who    | Estimate | Actual  | Task
+-------+----------+---------+----------------------------------------------
+-------+----------+---------+----------------------------------------------
+
+
+---------------------------------------------------------------------------
+   New tasks that we decided to take on for Iteration #11, in March 2006
+-------+----------+---------+----------------------------------------------
+Who    | Estimate | Actual  | Task
+-------+----------+---------+----------------------------------------------
+-------+----------+---------+----------------------------------------------
+
+
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+     Summary of Iteration #11
+            March 2006
+     March 6 to April 3, 2006
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+   4    = number of weeks in March iteration
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+

Modified: trunk/documentation/to_do_list.txt
===================================================================
--- trunk/documentation/to_do_list.txt	2006-02-27 19:49:15 UTC (rev 455)
+++ trunk/documentation/to_do_list.txt	2006-03-02 22:02:48 UTC (rev 456)
@@ -84,16 +84,14 @@
 -------+----------+---------+----------------------------------------------
 Who    | Estimate | Actual  | Task
 -------+----------+---------+----------------------------------------------
-mignon |          | 0.25 IED| 301. done
        |          |         | 302. Attempt to embed an OpenRecord view in a MediaWiki page
 (soon) |          |         | 303. Have a server that supports repositories with thousands of items
 (soon) |          |         | 304. Change View class so a subview can be either an orp.view.View or a dojo.widget instance
 (soon) |          |         | 305. Look at replacing our notion of Views with Dojo's notion of widgets
        |          |         | 306. Run in IE as well as Firefox
        |          |         | 307. Add support for repository merging
-brian  | 3    IED | 1    IED| 308. Make screencasts about OpenRecord (and plugins) see: .swf, .mov, SnapZ Pro, Camtesia Studio, Windows Media Encoder 9 Series
        |          |         | 309. Consider implementing a JavaScript file:// version of this: http://lists.berlios.de/pipermail/openrecord-dev/2005-October/000248.html
-brian  |          |         | 310. Propose a Dojo data-provider design (dojo.data) that would work for OpenRecord as well as other uses
+brian  |          | (2.5)   | 310. Propose a Dojo data-provider design (dojo.data) that would work for OpenRecord as well as other uses
        |          |         | 311. (new task...)
 -------+----------+---------+----------------------------------------------
 
@@ -120,12 +118,9 @@
        |          |         | 416. grep for ".getEntriesForAttribute(" and refactor to use ".getValuesForAttribute("
        |          |         | 417. Maybe change all our indenting from spaces to tabs, to be in sync with dojo
        |          |         | 418. Prevent memory leaks via dojo.event.browser.clean(parent.removeChild(child));
-mignon |          | 5    IED| 419. done
        |          |         | 420. Replace XMLHttpRequest calls with dojo.io.bind() calls
        |          |         | 421. Consider refactoring orp.storage so that FileProtocolStorage is "behind" dojo.io.bind
-brian  |          | done?   | 422. Replace all use of orp.uuid with dojo.uuid, and remove orp.uuid from our tree
        |          |         | 423. Replace all use of orp.lang with dojo.lang, and remove orp.lang from our tree
-       |          |         | 424. Fix the unit tests in tests/view/SectionViewConstructorTest.js
        |          |         | 425. Fix the bug that prevents http:// access on Brian's desktop machine
        |          |         | 426. (new task...)
 -------+----------+---------+----------------------------------------------
@@ -137,18 +132,15 @@
 Who    | Estimate | Actual  | Task
 -------+----------+---------+----------------------------------------------
        |          |         | 510. Implement a good URL-to-content mapping, so that URLs won't go bad in future releases
-brian  |          | done?   | 511. Assign system attributes & categories to a "System" category
-brian  |          | done?   | 512. Hide "System" items most of the time
        |          |         | 513. improve UI for creating a new category
        |          |         | 514. Deal with \n in page name or summary fields
        |          |         | 515. be able to select a table row 
        |          |         | 516. be able to delete a selected table row 
        |          |         | 517. drag-and-drop to re-order table rows
-       |          |         | 518. improve UI for "add new attribute" in Table View 
-brian  |          | done    | 519. improve UI for setting the expected data type of an attribute
+       |          | (0.25)  | 518. improve UI for "add new attribute" in Table View 
 -------+----------+---------+----------------------------------------------
        |          |         | 520. have Detail View use textarea instead of text input, for long strings
-       |          |         | 521. make it possible to add a new attribute in Detail View 
+mignon |          | (1  IED)| 521. make it possible to add a new attribute in Detail View 
        |          |         | 522. improve UI for initial "out of the box" experience
        |          |         | 523. improve UI for creating a new page
        |          |         | 524. improve UI for adding a new section to a page
@@ -218,8 +210,12 @@
              I think it would be good to aim more towards users, and trim some of the jargon 
              (esp. at the end of the concurrency section).  
              For developers, I'd show more code.  A lot more code =)."
+ + bodly says: "sound came across very clear and what not on this, however it still 
+               has alot of ambient sound ... I think that maybe you could take care of 
+               some of that with an audio filter after the recording. ... Really your 
+               best bet would probably be to rent a real mic from a music store. ...
+               i'm always happy to help with any audio stuff"
 
-
 =======================================================
 More tasks
 =======================================================



From skinner at berlios.de  Thu Mar  2 23:52:08 2006
From: skinner at berlios.de (skinner at BerliOS)
Date: Thu, 2 Mar 2006 23:52:08 +0100
Subject: [openrecord-svn] r457 - in trunk/web_pages: . screencast screencast/2006-02-21 screencast/2006-02-21/images screencast/2006-02-21/movies
Message-ID: <200603022252.k22Mq857021427@sheep.berlios.de>

Author: skinner
Date: 2006-03-02 23:45:58 +0100 (Thu, 02 Mar 2006)
New Revision: 457

Added:
   trunk/web_pages/screencast/
   trunk/web_pages/screencast/2006-02-21/
   trunk/web_pages/screencast/2006-02-21/OpenRecord.html
   trunk/web_pages/screencast/2006-02-21/OpenRecord.swf
   trunk/web_pages/screencast/2006-02-21/config.xml
   trunk/web_pages/screencast/2006-02-21/images/
   trunk/web_pages/screencast/2006-02-21/images/crn_btmlft.gif
   trunk/web_pages/screencast/2006-02-21/images/crn_btmlft_top.gif
   trunk/web_pages/screencast/2006-02-21/images/crn_btmrt.gif
   trunk/web_pages/screencast/2006-02-21/images/crn_btmrt_top.gif
   trunk/web_pages/screencast/2006-02-21/images/crn_toplft.gif
   trunk/web_pages/screencast/2006-02-21/images/crn_toplft_btm.gif
   trunk/web_pages/screencast/2006-02-21/images/crn_toprt.gif
   trunk/web_pages/screencast/2006-02-21/images/crn_toprt_btm.gif
   trunk/web_pages/screencast/2006-02-21/images/side_btm.gif
   trunk/web_pages/screencast/2006-02-21/images/side_left.gif
   trunk/web_pages/screencast/2006-02-21/images/side_rt.gif
   trunk/web_pages/screencast/2006-02-21/images/side_top.gif
   trunk/web_pages/screencast/2006-02-21/movies/
   trunk/web_pages/screencast/2006-02-21/movies/1_intro.swf
   trunk/web_pages/screencast/2006-02-21/movies/2_examples.swf
   trunk/web_pages/screencast/2006-02-21/movies/3_editing.swf
   trunk/web_pages/screencast/2006-02-21/movies/4_flexibility.swf
   trunk/web_pages/screencast/2006-02-21/movies/5_concurrency.swf
   trunk/web_pages/screencast/2006-02-21/movies/6_plugins.swf
   trunk/web_pages/screencast/2006-02-21/movies/7_introspection.swf
   trunk/web_pages/screencast/2006-02-21/movies/8_public_domain.swf
   trunk/web_pages/screencast/2006-02-21/movies/preload.swf
   trunk/web_pages/screencast/2006-02-21/transcript.html
Log:
check-in of 2006-02-21 screencast

Added: trunk/web_pages/screencast/2006-02-21/OpenRecord.html
===================================================================
--- trunk/web_pages/screencast/2006-02-21/OpenRecord.html	2006-03-02 22:02:48 UTC (rev 456)
+++ trunk/web_pages/screencast/2006-02-21/OpenRecord.html	2006-03-02 22:45:58 UTC (rev 457)
@@ -0,0 +1,101 @@
+<html>
+<head><!-- saved from url=(0025)http://www.techsmith.com/ -->
+<meta http-equiv=Content-Type content="text/html;  charset=ISO-8859-1">
+<title>Created by Camtasia Theater</title>
+<script language="JavaScript">
+<!--
+// To load a movie other then the first one listed in the xml file you can pass the number
+// of the movie to load in the "movie" query string parameter.
+// To load the third movie you would do the following:
+//
+// template.html?movie=3
+//
+var param = "";
+var args = new Object();
+var query = location.search.substring(1);     
+// Get query string
+var pairs = query.split(",");
+// Break at comma
+for(var i = 0; i < pairs.length; i++) {
+	var pos = pairs[i].indexOf('=');
+	if (pos == -1) continue; // Look for "name=value"
+	var argname = pairs[i].substring(0,pos); // If not found, skip
+	var value = pairs[i].substring(pos+1); // Extract the name
+	args[argname] = unescape(value); // Extract the value
+}
+if (args.movie) param = "?movieNum=" + parseInt(args.movie);
+//-->
+</script> 
+
+</head>
+<body bgcolor="#FFFFFF">
+<table width="967" border="0" cellpadding="0" cellspacing="0">
+  <tr>
+    <td width="1%"><img src="images/crn_toplft.gif" width="58" height="27"></td>
+    <td width="99%" background="images/side_top.gif">&nbsp;</td>
+    <td width="1%"><img src="images/crn_toprt.gif" width="58" height="27"></td>
+  </tr>
+</table>
+<table width="967" border="0" cellpadding="0" cellspacing="0">
+  <tr>
+    <td width="1%" valign="top" background="images/side_left.gif"><img src="images/side_left.gif" width="13" height="126"></td>
+    <td width="99%"><!-- URL's used in the movie-->
+      <!-- text used in the movie-->
+      <script language="JavaScript">
+		<!--
+      		document.write("<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"" );
+      		document.write("codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,0,0\"" );
+      		document.write("width=\"941\" height=\"586\" id=\"movie\" align=\"\">" );
+      		document.write("<param name=movie value=\"OpenRecord.swf" + param + "\">" );
+      		document.write("<param name=quality value=high>" );
+      		document.write("<param name=bgcolor value=#FFFFFF>" );
+      		document.write("<embed src=\"OpenRecord.swf" + param + "\" quality=high bgcolor=#FFFFFF width=\"941\" height=\"586\" name=\"movie\" align=\"\"" );
+ 			document.write("type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" swLiveConnect=\"false\"></embed>");
+      		document.write("</object>");
+      //-->
+	</script>
+	<noscript>
+		<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,0,0"
+      		width="941" height="586" id="movie" align="">
+      		<param name=movie value="OpenRecord.swf">
+      		<param name=quality value=high>
+      		<param name=bgcolor value=#FFFFFF>
+      		<embed src="OpenRecord.swf" quality=high bgcolor=#FFFFFF width="941" height="586" name="movie" align=""
+ 			type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" swLiveConnect="false"></embed>
+      	</object>
+	</noscript>
+    </td>
+    <td width="1%" valign="top" background="images/side_rt.gif"><img src="images/side_rt.gif" width="13" height="126"></td>
+  </tr>
+</table>
+<table width="967" border="0" cellpadding="0" cellspacing="0">
+  <tr>
+    <td width="1%"><img src="images/crn_btmlft.gif" width="58" height="31"></td>
+    <td width="99%" background="images/side_btm.gif">&nbsp;</td>
+    <td width="1%"><img src="images/crn_btmrt.gif" width="58" height="31"></td>
+  </tr>
+</table>
+
+    <!-- Creative Commons metadata for Public Domain License 
+    
+    <rdf:RDF xmlns="http://web.resource.org/cc/"
+        xmlns:dc="http://purl.org/dc/elements/1.1/"
+        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
+    <Work rdf:about="">
+       <dc:title>openrecord.org</dc:title>
+       <dc:type rdf:resource="http://purl.org/dc/dcmitype/Text" />
+       <license rdf:resource="http://web.resource.org/cc/PublicDomain" />
+    </Work>
+    
+    <License rdf:about="http://web.resource.org/cc/PublicDomain">
+       <permits rdf:resource="http://web.resource.org/cc/Reproduction" />
+       <permits rdf:resource="http://web.resource.org/cc/Distribution" />
+       <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
+    </License>
+    
+    </rdf:RDF>
+
+    -->
+
+</body>
+</html>
\ No newline at end of file

Added: trunk/web_pages/screencast/2006-02-21/OpenRecord.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/OpenRecord.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/config.xml
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/config.xml
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/crn_btmlft.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/crn_btmlft.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/crn_btmlft_top.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/crn_btmlft_top.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/crn_btmrt.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/crn_btmrt.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/crn_btmrt_top.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/crn_btmrt_top.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/crn_toplft.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/crn_toplft.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/crn_toplft_btm.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/crn_toplft_btm.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/crn_toprt.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/crn_toprt.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/crn_toprt_btm.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/crn_toprt_btm.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/side_btm.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/side_btm.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/side_left.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/side_left.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/side_rt.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/side_rt.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/images/side_top.gif
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/images/side_top.gif
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/movies/1_intro.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/movies/1_intro.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/movies/2_examples.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/movies/2_examples.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/movies/3_editing.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/movies/3_editing.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/movies/4_flexibility.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/movies/4_flexibility.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/movies/5_concurrency.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/movies/5_concurrency.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/movies/6_plugins.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/movies/6_plugins.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/movies/7_introspection.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/movies/7_introspection.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/movies/8_public_domain.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/movies/8_public_domain.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/movies/preload.swf
===================================================================
(Binary files differ)


Property changes on: trunk/web_pages/screencast/2006-02-21/movies/preload.swf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/web_pages/screencast/2006-02-21/transcript.html
===================================================================
--- trunk/web_pages/screencast/2006-02-21/transcript.html	2006-03-02 22:02:48 UTC (rev 456)
+++ trunk/web_pages/screencast/2006-02-21/transcript.html	2006-03-02 22:45:58 UTC (rev 457)
@@ -0,0 +1,573 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" >
+
+  <head>
+    <title>Screencast Transcript - openrecord.org</title>
+    <link rel="stylesheet" type="text/css" href="../../chrome/base_style.css" />
+    <script type="text/javascript" src="../../chrome/external_links.js"></script>
+  </head>
+  
+  <body>
+    <!--#include virtual="../../chrome/header.html" -->
+    
+    <div>
+      <h1>Screencast Transcript</h1>
+        <ul> 
+          <li class="detail"><a href="#part_1">1. Intro</a></li>
+          <li class="detail"><a href="#part_2">2. Examples</a></li>
+          <li class="detail"><a href="#part_3">3. Editing</a></li>
+          <li class="detail"><a href="#part_4">4. Flexibility</a></li>
+          <li class="detail"><a href="#part_5">5. Concurrency</a></li>
+          <li class="detail"><a href="#part_6">6. Plugins</a></li>
+          <li class="detail"><a href="#part_7">7. Introspection</a></li>
+          <li class="detail"><a href="#part_8">8. Public domain</a></li>
+        </ul>
+      <hr/>
+
+      <h2><a name="part_1" class="anchor">1. Intro</a></h2>      
+        <p>Hello, I'm Brian Skinner. I'm one of the developers of OpenRecord.
+        OpenRecord is a software product. It's a free, open source software product, 
+        being developed by volunteers at the Dojo Foundation.
+        OpenRecord is a wiki engine that you'll be able to use to run wiki sites.</p>
+
+        <p>OpenRecord is similar to conventional wiki software,
+        like the MediaWiki engine, which runs the Wikipedia site, 
+        and TWiki, which is popular on internal corporate sites, 
+        as well and public Internet sites.
+        MediaWiki and TWiki are both examples of traditional text-based wiki engines.
+        They're geared towards content that's mostly text, like encyclopedia entries.
+        In the past decade, over 100 other text-based wiki engines have been developed.</p>
+
+        <p>More recently we've begun to see new wiki engines that are geared 
+        toward spreadsheet and database content.  
+        Instead of sites with pages of prose,
+        these new wikis are designed for sites with charts and graphs, 
+        and tables of database records.
+
+        There are dozens of examples of this new sort of wiki software.
+        Some products have been around for years, like QuickBase and Sparrow Web.
+        Other products are just coming out now, like Dabble DB and JotSpot Tracker.
+        OpenRecord falls into this new category of wiki software.</p>
+
+        <p>Today, text-based wiki software is being used for all sorts of different web sites.
+        For example, the MediaWiki software is used for the famous Wikipedia site,
+        and it's also used on hundreds of other public Internet sites, 
+        as well as internal corporate sites and small personal wikis.
+ 
+        We're designing OpenRecord with a wide variety of use cases in mind.
+        We'd love to create a large flagship Alamanac site, inspired by the Wikipedia site. 
+        Where Wikipedia focuses on encyclopedia entries, 
+        we would focus on the sort of quantitative database content 
+        that you find in reference books like the World Alamanac and the CIA World Factbook.
+        
+        We'd also like to see OpenRecord used to make other public wiki sites, 
+        private corporate sites, and small personal sites for individuals and clubs.</p>
+ 
+        <p>OpenRecord is still in the early stages of development.
+        We're only at about a 0.2 release now,
+        but we've already got a lot of features implemented
+        and we'll demo some of those for you in the rest of this screencast.</p>
+      <hr/>
+      
+      <h2><a name="part_2" class="anchor">2. Examples</a></h2>
+        <p>Here are a few examples of web sites that you could make using OpenRecord.</p>
+        
+        <p>This first example is a World Almanac site,
+        with statistics about the nations and cities of the world,
+        like this page about the top-ten largest cities,
+        which shows a bar graph of the city sizes.
+        
+        A site like this could be set up for open,
+        world-scale collaboration, like the Wikipedia site.</p>
+        
+        <p>You could also use OpenRecord for much smaller scale collaboration. 
+        
+        Here's another example.
+        This is the Cole County Little League site.
+        It's a site where parents and coaches can keep track of
+        of team rosters and upcoming games.
+        This page has the team roster for the Uniondale Sluggers,
+        with the names and jersey numbers of the kids on the team.</p>
+        
+        <p>Here's a book club example, 
+        where the forest heights book club
+        keeps track of what books they've read
+        and what books they're planning to read.
+        This page just has a couple simple bullet point lists,
+        with the titles of books.</p>
+        
+        <p>This next site is an example of something that might be set 
+        up by the volunteers who run a little museum in a small town.
+        They could use a site like this as a database to keep 
+        historical records about the few thousand items the have on exhibit.</p>
+        
+        <p>And this last example is a wiki site set up to keep track of 
+        open source software projects.
+        Here's a page about the Mozilla Firefox software project,
+        with information about which open source license it uses
+        and what platforms it runs on.</p>
+      <hr/>
+      
+      <h2><a name="part_3" class="anchor">3. Editing</a></h2>
+        <p>Hi, I'm Patricia.  I'm going to show you what it's like to use an OpenRecord wiki.</p>
+
+        Here's the wiki for the Forest Heights Book Club.
+        It's an example of the sort of site that a small book club might set up.</p>
+        
+        <p>Every OpenRecord site is a database of items and attributes.  
+        In this case, the items represent things like Books and Authors.
+        
+        An OpenRecord site has a navigation bar at the left, 
+        with links to the main pages on the site.
+        When I made this site, I created pages to keep track of who's in the book club, 
+        what books we've read, and what books people have suggested.</p>
+        
+        <p>The Books page shows a quick summary of what books we've read 
+        and what books we're thinking of reading.</p>
+        
+        <p>The Suggestions page shows more information about each of 
+        the books that have been suggested.</p>
+        
+        <p>Even though OpenRecord is a web app, we want it to feel like a desktop app.  
+        We try to provide WYSIWYG, in-place editing.
+        For example, to change the name of a page,
+        you can click on the name and start typing.
+       
+        Or you can click on the summary of the page, and "add text here".
+        
+        Or you can click on any cell in a table, and change the text there.</p>
+       
+        <p>We're also putting in drag-and-drop editing where-ever it makes sense.
+        
+        For example, on the nav bar, I can grab the Meetings page and 
+        drag it up above Members.
+        
+        And I can drag one of the columns to change the column order.
+        
+        And I can drag entries in a table.
+        I can move Eric Drexler up to be the author of Engines of Creation,
+        and I can move Jane Austen down to be the author of Mansfield Park.</p>
+        
+        <p>We've also made it easy to create new items.
+        To add a new book, I just click in the table and start typing.
+        I'll add Bleak House, 
+        and Emma, by Jane Austen.
+        
+        When I entered those lines, OpenRecord made two new items, one for each book,
+        and entered those items in the database for this site.
+        I didn't have to fill in any form, or click a submit button,
+        or get re-directed to any confirmation page.</p>
+        
+        <p>Creating new items is easy, and we've also made it easy to create new pages.
+        I'll just press this "Show Tools" button to get a few more editing tools,
+        and then I can press the "New Page" button to get a new page.
+        Now I can give the page a title, "Authors",
+        and select what sort of items I want to have show up on the page, "Author".</p>
+        
+        <p>Each page has its own URL, 
+        so when I created this page, OpenRecord created a new URL for it.
+        I can bookmark the URL in my browser,
+        or I can copy the URL and paste it into a mail message to tell a friend about the new page.</p>
+        
+        <p>Every page has a URL, and every item has its own page, with its own URL.
+        I can click on any of these books to go to a detail page about that book.
+        
+        Here's the detail page for Mansfield Park, showing all the attributes of this book.
+        I could bookmark this page, or mail the URL.
+        I can also click on any of these cells and change the values, if I want to.</p>
+        
+        <p>Now let me go to the Meetings page.
+        When I made this page, I created two sections.
+        The first section has a table showing some details about each meeting of the book club.
+        The bottom section has a bar graph of the attendance at the meetings.</p>
+        
+        <p>Both of these sections are views into the database of items.
+        Each of the views are showing the same three items,
+        the items representing the book club meetings in October, November, and December.
+        If I change an item in one of the views, the change will automatically appear in the other view.
+        
+        In the table, I'll change the December attendance to 12, 
+        and you can see the bar graph update too.</p>
+        
+        <p>You can add however many sections you want to each page.  
+        
+        Sections are views into the database, and different sections can show the same items.
+        You can also have the same items showing up on different pages.
+        For example, the Books page shows the book Emma,
+        and the Suggestions page also shows the book Emma.
+        
+        If I change Emma on either of those pages, the other page will automatically change.
+        This is one of the big differences between OpenRecord and a traditional wiki.
+        In a traditional wiki, each page is an island. 
+        Each page <b>owns</b> the content on that page, 
+        and if you delete the page, you'll also delete the content.
+        In OpenRecord, the content lives in the database, 
+        and each page is just a view into the content.</p>
+      <hr/>
+      
+      <h2><a name="part_4" class="anchor">4. Flexibility</a></h2>
+        <p>We want OpenRecord to be more flexible than traditional database tools.
+        Instead of enforcing rigid rules, our goal is to let you do whatever you want.
+        
+        I'll use the Book Club wiki site to show you 
+        a few of the ways we try to be flexible.</p>
+        
+        <p>On this Suggestions page, I've made a table of books.
+        The different columns of the table have different data types.
+        
+        Like other spreadsheets and database tools, 
+        OpenRecord knows about different data types, like numbers, dates, and text.
+        
+        The entries in the "Name" column are just simple text strings.
+        The "Pages" column has integer numbers.
+        The "Publication Date" column has calendar dates.
+        And the "Author" column has links to items that represent authors.
+        
+        If you enter "1852" in the "Pages" column, we interpret it as a number.
+        If you enter "1852" in the Publication Date" column, we interpret it as a Date.</p>
+        
+        <p>OpenRecord is loosely typed, like a spreadsheet, 
+        rather than strongly typed, like a relational database.
+        
+        What that means is that you're never restricted from entering whatever you want.
+        You can put "I don't know" as the publication date for Bleak House, and that's fine.
+        You can always put plain text values into any sort of field.
+        
+        If you type something like "I don't know", 
+        OpenRecord gives up on interpreting it as a date, 
+        and instead just treats it as a text string.<p>
+        
+        </p>But in a date field, we do our best to interpret what you type as a date.
+        You can type just a year, like 1986, and we'll read it as a date.
+        Or you can type "Oct 1986", 
+        or "Today",
+        or "Oct 12, 1986 9:52 am".<p>
+        
+        <p>You can also put more than one publication date for a book.
+        Bleak House was actually published in instalments, starting in 
+        March 1852 and running until Sep 1853.</p>
+        
+        <p>We never restrict you to only having one value for an attribute. 
+        Any attribute of any item is always allowed to have as many values as you want.
+        
+        For example, some books might have more than one author.
+        I'll add "Chris Peterson" as an author for "Engines of Creation".</p>
+        
+        <p>OpenRecord has simple literal types, like numbers, dates, and text.
+        We also have item links, so one item can be related to another.
+        For example, in the author column I've added references to author items.
+        I could have just used a text string to record the author, 
+        but I wanted to create author items so that I could keep track of 
+        detailed information about authors as well as books.
+        
+        I can click on this Jane Austen link and go to a detail page showing more
+        information about Jane Austen, like when she lived, and what books she wrote.</p>
+        
+        <p>We try to make it easy to create item links.
+        For example, if I click in the author column, 
+        OpenRecord knows that I probably want to create a link to an author item.
+        OpenRecord offers me a list of the authors who are already in the database.
+        If I type the letter "J", 
+        the list narrows down to just the authors with names that start with "J".
+        
+        If I type in a new name, OpenRecord creates a brand new item for that author
+        and creates a link to the new item.</p>
+        
+        <p>OpenRecord offers both one-way links and bi-directional links.
+        On this book club wiki, I've told OpenRecord to connect the
+        authors and books using bi-directional links.  
+        That means OpenRecord will always keep the authors in sync
+        with the books they've authored. 
+        
+        When I entered Charles Dickens in this table as the author of Bleak House,
+        OpenRecord did three things for me:
+        it created an item to represent Charles Dickens;
+        it set the author attribute of Bleak House to point to Dickens;
+        and on the Dickens item, it created a books attribute and set that
+        to point back at Bleak House.
+        
+        So, if I click on the link to Charles Dickens
+        I'll see that this item has an entry for Bleak House in the books attribute.</p>
+      <hr/>
+      
+      <h2><a name="part_5" class="anchor">5. Concurrency</a></h2>
+        <p>OpenRecord supports concurrent editing by multiple users.
+        Several people can edit a page at the same time, and
+        one person will never accidentally overwrite another person's changes.
+        
+        I'll use the Book Club wiki site to show you some
+        examples of concurrent editing.</p>
+        
+        <p>I'm going to use several browser windows, 
+        one for each user.
+        
+        In this first window, I'm logged in as Bill.
+        Here's a second window, where I'm logged in as Hillary.
+        
+        In this demo, Hillary's browser and Bill's browser are both
+        running on the same computer, but OpenRecord doesn't know 
+        that, and Hillary and Bill could just as easily be thousands
+        of miles away from each other, using different browsers on 
+        different operating systems.</p>
+        
+        <p>Hillary and Bill can each add new books to the suggestions page.
+        I'll start with Hillary, who adds a couple of books: "Ariel"
+        and "Carfree Cities".
+        
+        And then I'll switch to Bill's window, where I'll add "Atlas Shrugged".
+               
+        Now I'll bring up a new browser window, for a third user, Al,
+        who's just now visiting the same page.
+        Al sees all of the books that Hillary and Bill added: 
+        Ariel, Atlas Shrugged, and Carfree Cities.</p>
+                
+        <p>At this point, neither Bill nor Hillary see the new books 
+        that the other person added.
+        The new additions have been sent to the server and saved in the
+        database, but the changes don't show up until the page is reloaded.
+        
+        Someday OpenRecord might use a polling mechanism 
+        or a live subscription mechanism so that the browser client code
+        gets notified of new changes on the server.  
+        But we haven't got that implemented yet, so for now you only
+        see changes when you refresh the page.
+        That's how most wikis work today, 
+        and in practice that's good enough for what most people need.
+        
+        If I press the refresh button in Bill's browser,
+        Hillary's new changes appear.</p>
+        
+        <p>Adding new items to a page is one example of concurrent editing.
+        Let me show you another example, 
+        this time changing the order of the pages in the nav bar.
+        Bill will drag the Suggestions page all the way to the top.
+        And Hillary will drag the Members page all the way to the bottom.
+        
+        Now when Al looks at the site, 
+        he'll see Suggestions at the top and Members at the bottom.
+        OpenRecord accepted both Hillary and Bill's changes,
+        and merged them together without letting either user's changes overwrite
+        the other user's changes.</p>
+        
+        <p>I'll show you one more example, 
+        this time with two users editing the same value in the same cell of a table.
+        In Bill's browser, I'll change the publication date 
+        of Mansfield Park from 1814 to December 1814.
+        In Hillary's browser, I'll change the same date from 1814
+        to January 1815.
+        
+        When I open the page in Al's browser, I see both of the new dates.  
+        It may be that both December 1814 and January 1815 are correct, 
+        so the users will leave the page just as it is. 
+        Or, one date may be wrong and should be deleted, but OpenRecord has
+        no way of knowing that, so OpenRecord just accepts both Bill's changes 
+        and Hillary's changes, and lets them sort it out.</p>
+        
+        <p>OpenRecord requires very little code to handle these sorts of concurrency cases.  
+        OpenRecord uses some unconventional data structures for representing 
+        items and values, and most of the concurrency handling falls out
+        for free as a result of the data structures.
+        
+        The OpenRecord database structure is inherently well-suited 
+        to distributed use.  
+        On-line concurrent use is one example of that.
+        Another example that we expect to handle well is offline use,
+        where a user copies an entire database to a laptop,
+        takes it on vacation, makes a bunch of changes,
+        and then merges those changes back into the company database 
+        once they return from vacation.</p>
+        
+        <p>OpenRecord should be well suited to this sort of forking and merging of repositories, 
+        including more complicated examples with multi-way forks and merges.
+        
+        The OpenRecord data structures might also work well in a set-up 
+        where you have a fault-tolerant peer-to-peer distributed datastore 
+        instead of a central server-based datastore.</p>
+      <hr/>
+      
+      <h2><a name="part_6" class="anchor">6. Plugins</a></h2>
+        <p>Developers can add to OpenRecord by writing plugin views.
+        
+        OpenRecord uses plugins to display items on pages.
+        OpenRecord has a small set of built-in plugins, 
+        and you can also add new ones.
+        
+        I'll use the Book Club wiki site to show you where we use plugins.</p>
+        
+        <p>On the book club wiki, the different pages show items in different ways.
+        The Books page has a couple of simple bullet-point lists of items.
+        The Suggestions page has a table of items.
+        The Meetings page has both a table and a bar graph.
+        I can click on an item link to go to a detail page,
+        and that page shows a detail view of a single item.
+        
+        All of those different views are implemented as plugins: 
+        the table view, the bar graph, the detail view, and the bullet point list.</p>
+        
+        <p>When you make a page, you can choose which plugin views you want to use.
+        You can also change an existing page to use different views.
+        
+        The Suggestions page shows a list of items using a table view.
+        When I click on the "Show Tools" button, 
+        I get a menu that lets me see what other plugin views are available.
+        I can switch to Outline View,
+        or Bar Chart View, 
+        or Detail View, where each item is displayed in a separate box.</p>
+        
+        <p>We've tried to make it pretty easy for programmers to create new plugins.
+        
+        Here's a simple Plugin Generator page that's included in OpenRecord.
+        
+        You fill in the name you want for your new plugin class,
+        and then press the "Create Plugin" button.</p>
+        
+        <p>The code generator creates a starter file for you, 
+        with a little boilerplate code that all plugins need.
+        
+        In the generated code, there's a method called "refresh", 
+        which the plugin calls whenever it draws itself on the screen.
+        The generated file includes some simple example code in the refresh method.  
+        I'll delete that generated code, 
+        and replace it with a single line that says "Hello World!".</p>
+        
+        <p>That's all it takes to write a simple plugin.
+        To install the plugin, just drop the file into the plugins directory of your
+        OpenRecord site.  OpenRecord will automatically find the plugin and install it.
+        
+        The next time you visit a page on the site, the new plugin will be available.</p>
+        
+        <p>To make a plugin, you just need to know how to write a little bit of
+        JavaScript code that looks at items and attributes and creates 
+        corresponding HTML elements in the DOM.  
+        You don't need to know anything about any of the underlying infrastructure.
+        You don't need to know about client-server communication, 
+        or about automatic update notifications,
+        or query execution,
+        or concurrency,
+        or unique IDs.</p>
+        
+        <p>We're hoping that we've made it easy to create plugins,
+        and that as a result developers will write a wide variety of plugin views:
+          bar graphs, scatter plots, Gantt charts, pivot tables, timeline views,
+          and all sorts of other quantitative visualizations,
+          like the ones Edward Tufte highlights in his books.</p>
+      <hr/>
+      
+      <h2><a name="part_7" class="anchor">7. Introspection</a></h2>
+        <p>If you're a programmer, 
+        you might be interested in looking around inside an OpenRecord database.
+        
+        You can use normal OpenRecord views for introspection,
+        to look into the database and see some of the underlying structures,
+        like the structures of the views themselves.</p>
+       
+        <p>Here's a newly created OpenRecord web site, without any pages.
+        It doesn't even have a welcome page, so there's not even a nav bar menu.</p>
+        
+        <p>I'll create an account for myself, 
+        and once I'm logged in I'll press the "Show Tools" button,
+        which makes the "New Page" button show up, so I can create a new page.
+        
+        I'll name this page "Page 1".</p>
+        
+        <p>Usually, when a user creates a new page, 
+        they'll set it up to show normal content items: 
+        items that represent things like books, or cities, or baseball players.
+        
+        But if you want to, 
+        you can create introspection pages, 
+        which show the items that represent the underlying structures in OpenRecord itself.</p>
+        
+        <p>In a langauge like Smalltalk, almost everything is an object, 
+        including classes and metaclasses.
+        
+        Similarly, in OpenRecord, almost everything is an item.
+        There are items for things like pages, sections, queries, attributes, and categories.</p>
+        
+        <p>Now that we've created a page in the database, 
+        we should be able to ask for a list of the pages, 
+        and see our new page in the list.
+        
+        To do that, I'll create a new section, and I'll call it "Section 1.1"
+        Then I'll set up the query to include items whose Category is "Page".
+        
+        That creates a table which has one row for each page in the database, 
+        and which has columns for the different attributes of the item representing the page.</p>
+        
+        <p>Now I'll create a second section, which I'll call "Section 1.2".
+        I'll set up the query to include items whose Category is "Section".
+        
+        That creates a table which has one row for each section in the database.
+        
+        Page 1 knows what sections it has, Section 1.1 and Section 1.2.
+        
+        And each of the Sections knows what page it belongs on.</p>
+        
+        <p>Now I'll create a second page, "Page 2", 
+        with a "Section 2.1", 
+        which I'll use to show an Outline View
+        that includes items whose Category is "Category".
+        
+        That creates a list that shows me the ten axiomatic Categories 
+        that are built into OpenRecord, before the user starts creating new categories.
+        The list includes Categories for things like Pages, Sections, Plugins,
+        Attributes, Categories, and Queries.</p>
+        
+        <p>I can go look at any of these items in more detail.
+        Here's the item representing the category called Page.
+        There are two items in this category, Page 1 and Page 2.
+        I'll go to the detail view for Page 2.
+        Since Page 2 is a page, it belongs to the Category called Page.
+        Since the category called Page is a category, 
+        it belongs to the category called category.
+        The Category called Category is itself a category, 
+        so that's where it all ends.</p>
+      <hr/>
+      
+      <h2><a name="part_8" class="anchor">8. Public domain</a></h2>
+        <p>This screencast is in the public domain.
+        Feel free to copy from it, or re-use any of the material however you'd like.</p>
+        
+        <p>All of the work in the OpenRecord project is public domain, 
+        including the source code.
+        
+        You can copy all of it, or any part of it, without restrictions.
+        
+        You're free to use it in proprietary commerical products
+        or in open source projects.</p>
+        
+        <p>For more information about the public domain dedication, 
+        check out the Creative Commons web site.</p>
+ 
+    </div>    
+        <p class="footer">
+          <span class="copyright">You can copy freely from this site &mdash; <a href="../../copyright.html">copyright</a> rights relinquished under the Creative Commons  
+          <a rel="license external" href="http://creativecommons.org/licenses/publicdomain/">Public Domain Dedication</a>.</span>
+          <br/>
+        </p>
+        
+    <!-- Creative Commons metadata for Public Domain License 
+    
+    <rdf:RDF xmlns="http://web.resource.org/cc/"
+        xmlns:dc="http://purl.org/dc/elements/1.1/"
+        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
+    <Work rdf:about="">
+       <dc:title>openrecord.org</dc:title>
+       <dc:type rdf:resource="http://purl.org/dc/dcmitype/Text" />
+       <license rdf:resource="http://web.resource.org/cc/PublicDomain" />
+    </Work>
+    
+    <License rdf:about="http://web.resource.org/cc/PublicDomain">
+       <permits rdf:resource="http://web.resource.org/cc/Reproduction" />
+       <permits rdf:resource="http://web.resource.org/cc/Distribution" />
+       <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" />
+    </License>
+    
+    </rdf:RDF>
+
+    -->
+  </body>
+  
+</html>
+    



From skinner at berlios.de  Fri Mar  3 00:02:00 2006
From: skinner at berlios.de (skinner at BerliOS)
Date: Fri, 3 Mar 2006 00:02:00 +0100
Subject: [openrecord-svn] r458 - in trunk/web_pages: chrome content page
Message-ID: <200603022302.k22N20Xn023058@sheep.berlios.de>

Author: skinner
Date: 2006-03-03 00:01:59 +0100 (Fri, 03 Mar 2006)
New Revision: 458

Added:
   trunk/web_pages/content/screencast.html
   trunk/web_pages/page/screencast.html
Modified:
   trunk/web_pages/chrome/footer.html
   trunk/web_pages/chrome/navbar.html
   trunk/web_pages/content/demo.html
   trunk/web_pages/content/people.html
Log:
web site updates

Modified: trunk/web_pages/chrome/footer.html
===================================================================
--- trunk/web_pages/chrome/footer.html	2006-03-02 22:45:58 UTC (rev 457)
+++ trunk/web_pages/chrome/footer.html	2006-03-02 23:01:59 UTC (rev 458)
@@ -14,7 +14,7 @@
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
 <Work rdf:about="">
-   <dc:title>openagenda.org</dc:title>
+   <dc:title>openrecord.org</dc:title>
    <dc:type rdf:resource="http://purl.org/dc/dcmitype/Text" />
    <license rdf:resource="http://web.resource.org/cc/PublicDomain" />
 </Work>

Modified: trunk/web_pages/chrome/navbar.html
===================================================================
--- trunk/web_pages/chrome/navbar.html	2006-03-02 22:45:58 UTC (rev 457)
+++ trunk/web_pages/chrome/navbar.html	2006-03-02 23:01:59 UTC (rev 458)
@@ -4,6 +4,7 @@
     <li class="menu_item"><a href="people.html">people</a></li>
     <li class="menu_item"><a href="pitch.html">pitch</a></li>
     <li class="menu_item"><a href="spec.html">spec</a></li>
+    <li class="menu_item"><a href="screencast.html">screencast</a></li>
     <li class="menu_item"><a href="demo.html">demo</a></li>
     <li class="menu_item"><a href="dev.html">dev</a></li>
     <li class="menu_item"><a href="bookmarks.html">bookmarks</a></li>

Modified: trunk/web_pages/content/demo.html
===================================================================
--- trunk/web_pages/content/demo.html	2006-03-02 22:45:58 UTC (rev 457)
+++ trunk/web_pages/content/demo.html	2006-03-02 23:01:59 UTC (rev 458)
@@ -1,8 +1,8 @@
 <div>
   <h1>Demo</h1>
   
-  <p>It'll probably be another couple of months until we're far enough
-  along to put together a first demo.</p>
+  <p>We don't yet have a proper demo for you to play with, 
+  and it will be a while until we do.</p>
 
   <p>Right now there's not much to see, but you're welcome to look if 
   you'd like. Currently the code <b>only runs in Firefox</b>. 

Modified: trunk/web_pages/content/people.html
===================================================================
--- trunk/web_pages/content/people.html	2006-03-02 22:45:58 UTC (rev 457)
+++ trunk/web_pages/content/people.html	2006-03-02 23:01:59 UTC (rev 458)
@@ -7,9 +7,7 @@
   <dl class="faq">
     <di>
       <dt>Brian Douglas Skinner</dt>
-      <dd><a
-        href="mailto:skinner at gumption.org?subject=openrecord.org">skinner at gumption.org</a>
-       &nbsp; - &nbsp; I wrote my first computer program a quarter century ago, on a 
+      <dd>I wrote my first computer program a quarter century ago, on a 
       Teletype machine that had no screen and that saved files by punching 
       holes in a paper tape. Over the years things have improved a lot, as 
       computers gained disk drives, and screens, and faster processors.
@@ -19,7 +17,8 @@
       and democracy, and Gutenberg's press.  I'm excited about each new 
       advance, and hope to play a small role in helping to move us forward.  
       Currently, I'm happily unemployed, living in San Francisco and working 
-      on the OpenRecord project.</dd>
+      on the OpenRecord project. You can reach me at <a
+        href="mailto:skinner at gumption.org?subject=openrecord.org">skinner at dojotoolkit.org</a></dd>
     </di>
     <di>
       <dt>Chih-Chao Lam</dt>
@@ -42,6 +41,17 @@
       in Redwood City.</dd>
     </di>
     <di>
+      <dt>Patricia McDaniel</dt>
+      <dd>Patricia is one of many non-programmers who have contributed
+      to the project. She has been contributing since the project began,
+      helping with UI design, terminology, writing and editing, and
+      screencasting. Patricia did her doctoral work in sociology, and is 
+      the author of the book <cite>Shrinking Violets and Caspar Milquetoasts</cite>.
+      She is currently a researcher at the 
+      <a href="http://tobacco.ucsf.edu/" rel="external">Tobacco Control Center</a> at the
+      University of California, San Francisco.</dd>
+    </di>
+    <di>
       <dt>Your name here!</dt>
       <dd>You got involved in the project early on, and took an active role by... 
       [ fill in the blank! ]</dd>

Added: trunk/web_pages/content/screencast.html
===================================================================
--- trunk/web_pages/content/screencast.html	2006-03-02 22:45:58 UTC (rev 457)
+++ trunk/web_pages/content/screencast.html	2006-03-02 23:01:59 UTC (rev 458)
@@ -0,0 +1,25 @@
+<div>
+  <h1>Screencast</h1>
+  
+  <p>In February 2006 we made this screencast about OpenRecord:</p>
+  
+  <ul> 
+    <li class="primary"><a href="screencast/2006-02-21/OpenRecord.html" rel="external">OpenRecord</a> (22 minutes)
+      <ul> 
+        <li class="detail"><a href="screencast/2006-02-21/OpenRecord.html?movie=1">1. Intro</a> (2 minutes)</li>
+        <li class="detail"><a href="screencast/2006-02-21/OpenRecord.html?movie=2">2. Examples</a> (2 minutes)</li>
+        <li class="detail"><a href="screencast/2006-02-21/OpenRecord.html?movie=3">3. Editing</a> (4 minutes)</li>
+        <li class="detail"><a href="screencast/2006-02-21/OpenRecord.html?movie=4">4. Flexibility</a> (4 minutes)</li>
+        <li class="detail"><a href="screencast/2006-02-21/OpenRecord.html?movie=5">5. Concurrency</a> (4 minutes)</li>
+        <li class="detail"><a href="screencast/2006-02-21/OpenRecord.html?movie=6">6. Plugins</a> (3 minutes)</li>
+        <li class="detail"><a href="screencast/2006-02-21/OpenRecord.html?movie=7">7. Introspection</a> (3 minutes)</li>
+        <li class="detail"><a href="screencast/2006-02-21/OpenRecord.html?movie=8">8. Public domain</a> (1 minute)</li>
+      </ul>
+    </li>
+    <li class="detail"><a href="screencast/2006-02-21/transcript.html?movie=8">transcript</a> </li>
+  </ul>
+  
+  </p>
+    
+</div>
+

Added: trunk/web_pages/page/screencast.html
===================================================================
--- trunk/web_pages/page/screencast.html	2006-03-02 22:45:58 UTC (rev 457)
+++ trunk/web_pages/page/screencast.html	2006-03-02 23:01:59 UTC (rev 458)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" >
+
+  <head>
+    <title>Screencast - openrecord.org</title>
+    <link rel="stylesheet" type="text/css" href="chrome/base_style.css" />
+    <script type="text/javascript" src="chrome/external_links.js"></script>
+  </head>
+  
+  <body>
+    <!--#include virtual="../chrome/header.html" -->
+    <!--#include virtual="../chrome/navbar.html" -->
+    
+    <div class="content_area">
+      <!--#include virtual="../content/screencast.html" -->
+    </div>
+    
+    <!--#include virtual="../chrome/footer.html" -->
+  </body>
+  
+</html>
+    



From mignon at berlios.de  Tue Mar 14 02:54:42 2006
From: mignon at berlios.de (mignon at BerliOS)
Date: Tue, 14 Mar 2006 02:54:42 +0100
Subject: [openrecord-svn] r459 - in trunk/source: . model view
Message-ID: <200603140154.k2E1sgGj015568@sheep.berlios.de>

Author: mignon
Date: 2006-03-14 02:54:10 +0100 (Tue, 14 Mar 2006)
New Revision: 459

Modified:
   trunk/source/DetailPlugin.js
   trunk/source/OpenRecordLoaderStepThree.js
   trunk/source/TablePlugin.js
   trunk/source/base_style.css
   trunk/source/model/READ_ME.txt
   trunk/source/model/World.js
   trunk/source/view/LoginView.js
Log:
Added combo boxes to TablePlugin and DetailPlugin for choosing an attribute.  New entries can now be added in DetailPlugin.  Updated model/READ_ME.txt.  


Modified: trunk/source/DetailPlugin.js
===================================================================
--- trunk/source/DetailPlugin.js	2006-03-02 23:01:59 UTC (rev 458)
+++ trunk/source/DetailPlugin.js	2006-03-14 01:54:10 UTC (rev 459)
@@ -38,7 +38,7 @@
 dojo.require("orp.util.Util");
 dojo.require("orp.model.Item");
 dojo.require("orp.lang.Lang");
-
+  
 // -------------------------------------------------------------------
 // Dependencies, expressed in the syntax that JSLint understands:
 // 
@@ -54,7 +54,7 @@
 // -------------------------------------------------------------------
 
 /**
- * A DetailPlugin display one or more content items. 
+ * A DetailPlugin displays one or more content items. 
  *
  * @scope    public instance constructor
  * @extends  PluginView
@@ -66,6 +66,7 @@
  */
 orp.DetailPlugin = function(superview, htmlElement, querySpec, layoutItem) {
   orp.view.PluginView.call(this, superview, htmlElement, querySpec, layoutItem, "DetailPlugin");
+  dojo.event.connect(this.getRootView(), "setShowToolsMode", this, "justSwitchedShowToolsMode");
 };
 
 dojo.inherits(orp.DetailPlugin, orp.view.PluginView);  // makes DetailPlugin be a subclass of PluginView
@@ -116,6 +117,8 @@
  * @scope    public instance method
  */
 orp.DetailPlugin.prototype.refresh = function () {
+  orp.view.View.removeChildrenOfElement(this.getHtmlElement());
+
   // for each content item, create a table for it
   var listOfContentItems = this.fetchItems();
   for (var contentItemKey in listOfContentItems) {
@@ -125,9 +128,12 @@
   }
 };
 
+orp.DetailPlugin.prototype.justSwitchedShowToolsMode = function () {
+  this.refresh();
+};
 
 /**
- * Given an item to be display, returns a string with XHTML to display
+ * Given an item to display, returns a string with XHTML to display
  * the item.
  *
  * @scope    public instance method
@@ -140,25 +146,136 @@
   var attributeCalledName = this.getWorld().getAttributeCalledName();
   
   var itemTable = orp.view.View.appendNewElement(this.getHtmlElement(),"table", orp.view.SectionView.cssClass.SIMPLE_TABLE);
-  var headerRow = orp.view.View.appendNewElement(itemTable,"tr");
-  orp.view.View.appendNewElement(headerRow,"td", orp.view.SectionView.cssClass.LABEL + " " + orp.view.SectionView.cssClass.TITLE,null,attributeCalledName.getDisplayName());
-  var aCell = orp.view.View.appendNewElement(headerRow,"td", orp.view.SectionView.cssClass.TITLE, null, inItem.getDisplayName());
-  var multiEntriesView = new orp.view.MultiEntriesView(this, aCell, inItem, attributeCalledName);
-  multiEntriesView.refresh();
+  var headerRow = orp.view.View.appendNewElement(itemTable, "tr");
+  orp.view.View.appendNewElement(headerRow, "td", orp.view.SectionView.cssClass.TITLE, null, "Attribute");
+  orp.view.View.appendNewElement(headerRow, "td", orp.view.SectionView.cssClass.TITLE, null, "Value");
+  
+  if (this.getRootView().isInShowToolsMode()) {
+    orp.view.View.appendNewElement(headerRow, "td", orp.view.SectionView.cssClass.TITLE, null, "Expected Type");
+  }
+  
+  this.createRowForAttribute(inItem, attributeCalledName, itemTable);
+  
   var listOfAttributes = inItem.getAttributes();
   for (var key in listOfAttributes) { 
     var attribute = listOfAttributes[key];
     if (attribute != attributeCalledName) {
-      var itemRow = orp.view.View.appendNewElement(itemTable,"tr");
-      orp.view.View.appendNewElement(itemRow,"td", orp.view.SectionView.cssClass.LABEL,null,attribute.getDisplayName());
-      aCell = orp.view.View.appendNewElement(itemRow,"td", orp.view.SectionView.cssClass.PLAIN);
-      multiEntriesView = new orp.view.MultiEntriesView(this, aCell, inItem, attribute);
-      multiEntriesView.refresh();
+      this.createRowForAttribute(inItem, attribute, itemTable);
     }
   }
+  if (this.isInEditMode()) {
+    var newRow = orp.view.View.appendNewElement(itemTable,"tr");
+    var cssLine = "comboBox";
+    var newAttributeCell = orp.view.View.appendNewElement(newRow, "td", cssLine);
+    newAttributeCell.superView = this;
+    var listOfAttributes = this.getWorld().getAttributes();
+    
+    var comboData = new Array();
+    var j = 0;
+    for (var i = 0; i < listOfAttributes.length; ++i) {
+      // Only list attributes that aren't already in the table.
+      if (inItem.getSingleEntryFromAttribute(listOfAttributes[i]) == null) {
+        comboData[j++] = new Array(listOfAttributes[i].getDisplayName(), listOfAttributes[i].getUuidString());
+      }
+    }
+    var comboBox = dojo.widget.createWidget("ComboBox", {}, newAttributeCell, "last");
+    var provider = comboBox.dataProvider;
+    provider.setData(comboData);
+    newAttributeCell.onComboBoxKeyUp = function(evt) {
+      if (evt.keyCode != orp.util.ASCII.RETURN) {
+        return;
+      }
+      var attribute = orp.DetailPlugin.getAttributeFromComboBoxValue(evt.target.value, this.superView.getWorld());
+      inItem.addEntry({attribute: attribute, value: ""});
+      orp.DetailPlugin.updateNewRow(newRow, inItem, attribute, this.superView);
+    };
+    dojo.event.connect(comboBox, "onKeyUp", newAttributeCell, "onComboBoxKeyUp");
+    newAttributeCell.selectOption = function(evt) {
+      if (evt && evt.type == "click" && evt.target && evt.target.textContent) {
+        var attribute = orp.DetailPlugin.getAttributeFromComboBoxValue(evt.target.textContent, this.superView.getWorld());
+        inItem.addEntry({attribute: attribute, value: ""});
+        orp.DetailPlugin.updateNewRow(newRow, inItem, attribute, this.superView);
+      }
+    };
+    dojo.event.connect(comboBox, "selectOption", newAttributeCell, "selectOption");
+  }
 };
 
+orp.DetailPlugin.updateNewRow = function(newRow, item, attribute, superView) {
+  orp.view.View.removeChildrenOfElement(newRow);
+  var cssLine = orp.view.SectionView.cssClass.LABEL + " " + orp.view.SectionView.cssClass.PLAIN;  
+  var columnOneCell = orp.view.View.appendNewElement(newRow, "td", cssLine, null, attribute.getDisplayName());
+  var columnTwoCell = orp.view.View.appendNewElement(newRow, "td", null, null);
+  var multiEntriesView = new orp.view.MultiEntriesView(superView, columnTwoCell, item, attribute);
+  multiEntriesView.refresh();
+  multiEntriesView.select(true);
+  multiEntriesView.setKeyPressFunction(function (evt, entryView) {return superView.keyPressOnEditField(evt, entryView);});
+};
 
+orp.DetailPlugin.getAttributeFromComboBoxValue = function(comboBoxValue, world) {
+  var listOfAttributes = world.getAttributes();
+  var attribute;
+  for (var i = 0; i < listOfAttributes.length; ++i) {
+    if (listOfAttributes[i].getDisplayName() == comboBoxValue) {
+      attribute = listOfAttributes[i];
+      break;
+    }
+  }
+  if (i == listOfAttributes.length) {
+    attribute = world.newAttribute(comboBoxValue);
+  }
+  return attribute;
+};
+
+orp.DetailPlugin.prototype.createRowForAttribute = function (item, attribute, htmlTableElement, cssClass) {
+  var tableRow = orp.view.View.appendNewElement(htmlTableElement, "tr");
+  var cssLine = orp.view.SectionView.cssClass.LABEL;
+
+  var columnOneCell = orp.view.View.appendNewElement(tableRow, "td", cssLine, null, attribute.getDisplayName());
+  var columnTwoCell = orp.view.View.appendNewElement(tableRow, "td", cssClass, null);
+  var multiEntriesView = new orp.view.MultiEntriesView(this, columnTwoCell, item, attribute);
+  multiEntriesView.refresh();
+
+  if (this.getRootView().isInShowToolsMode()) {
+    var columnThreeCell = orp.view.View.appendNewElement(tableRow, "td", cssClass);
+    var attributeCalledExpectedType = this.getWorld().getAttributeCalledExpectedType();
+    var multiEntriesView2 = new orp.view.MultiEntriesView(this, columnThreeCell, attribute, attributeCalledExpectedType);
+    multiEntriesView2.refresh();
+  }
+};
+
+/*
+This is a subset of orp.TablePlugin.prototype.keyPressOnEditField.
+*/
+orp.DetailPlugin.prototype.keyPressOnEditField = function(eventObject, anEntryView) {
+  var asciiValueOfKey = eventObject.keyCode;
+  var shiftKeyPressed = eventObject.shiftKey;
+  
+  var MOVE_LEFT = "left";
+  var MOVE_UP = "up";
+  var MOVE_RIGHT = "right";
+  var MOVE_DOWN = "down";
+  
+  var move = null;
+  switch (asciiValueOfKey) {
+    case orp.util.ASCII.RETURN:
+      move = (shiftKeyPressed) ? MOVE_UP : MOVE_DOWN;
+      break;
+    case orp.util.ASCII.TAB:
+      move = (shiftKeyPressed) ? MOVE_LEFT : MOVE_RIGHT;
+      break;
+    default:
+      move = null;
+      break;
+  }
+  
+  if (move) {
+    anEntryView.stopEditing();
+    this.refresh();
+  }
+  return move;
+};
+
 // -------------------------------------------------------------------
 // End of file
 // -------------------------------------------------------------------

Modified: trunk/source/OpenRecordLoaderStepThree.js
===================================================================
--- trunk/source/OpenRecordLoaderStepThree.js	2006-03-02 23:01:59 UTC (rev 458)
+++ trunk/source/OpenRecordLoaderStepThree.js	2006-03-14 01:54:10 UTC (rev 459)
@@ -44,6 +44,8 @@
 dojo.require("dojo.widget.Button2");
 dojo.require("dojo.widget.html.Button2");
 dojo.require("dojo.widget.Menu2");
+dojo.require("dojo.widget.ComboBox");
+dojo.require("dojo.widget.html.ComboBox");
 
 
 if (djConfig.debugAtAllCosts) {

Modified: trunk/source/TablePlugin.js
===================================================================
--- trunk/source/TablePlugin.js	2006-03-02 23:01:59 UTC (rev 458)
+++ trunk/source/TablePlugin.js	2006-03-14 01:54:10 UTC (rev 459)
@@ -223,13 +223,13 @@
 orp.TablePlugin.prototype._buildAddColumnControl = function(headerRow) {
   var cssClass = "add_column" + " " + orp.view.RootView.cssClass.EDIT_TOOL;
   var headerCell = orp.view.View.appendNewElement(headerRow, "th", cssClass);
-  var emptySpan = orp.view.View.appendNewElement(headerCell, "span");
-  orp.view.View.appendNewTextNode(emptySpan, " ");
-  orp.view.View.appendNewElement(headerCell, "br");
+  headerCell.superView = this;
   
-  var ADD_COLUMN_CONTROL_USES_HTML_INSTEAD_OF_DOJO = true;
+  var ADD_COLUMN_CONTROL_USES_HTML_INSTEAD_OF_DOJO = false;
   if (ADD_COLUMN_CONTROL_USES_HTML_INSTEAD_OF_DOJO) {
-    // var htmlElement = this.getHtmlElement();
+    var emptySpan = orp.view.View.appendNewElement(headerCell, "span");
+    orp.view.View.appendNewTextNode(emptySpan, " ");
+    orp.view.View.appendNewElement(headerCell, "br");
     var selectElt = orp.view.View.appendNewElement(headerCell, "select");
     var listOfAttributes = this.getWorld().getAttributes();
     var optionElt = orp.view.View.appendNewElement(selectElt, "option");
@@ -245,10 +245,35 @@
     }
     this._selectElement = selectElt;
   } else {
-    var editButton = orp.view.View.appendNewElement(headerCell, "input");
-    editButton.type = "Button";
-    editButton.value = "Add column...";
-    dojo.event.connect(editButton, "onclick", this, "_clickOnAddColumnButton");
+    var listOfAttributes = this.getWorld().getAttributes();    
+    var comboData = new Array();
+    var j = 0;
+    for (var i = 0; i < listOfAttributes.length; ++i) {
+      var attribute = listOfAttributes[i];
+      if (!orp.util.isObjectInSet(attribute, this._displayAttributes)) {
+        comboData[j++] = new Array(listOfAttributes[i].getDisplayName(), listOfAttributes[i].getUuidString());
+      }
+    }
+    var comboBox = dojo.widget.createWidget("ComboBox", {}, headerCell, "last");
+    var provider = comboBox.dataProvider;
+    provider.setData(comboData);
+    
+    var _this = this;
+    headerCell.onComboBoxKeyUp = function(evt) {
+      if (evt.keyCode != orp.util.ASCII.RETURN) {
+        return;
+      }
+      var attribute = orp.TablePlugin.getAttributeFromComboBoxValue(evt.target.value, this.superView.getWorld());
+      _this._addOrRemoveOneColumn(attribute);
+    };
+    dojo.event.connect(comboBox, "onKeyUp", headerCell, "onComboBoxKeyUp");
+    headerCell.selectOption = function(evt) {
+      if (evt && evt.type == "click" && evt.target && evt.target.textContent) {
+        var attribute = orp.TablePlugin.getAttributeFromComboBoxValue(evt.target.textContent, this.superView.getWorld());
+        _this._addOrRemoveOneColumn(attribute);
+      }
+    };
+    dojo.event.connect(comboBox, "selectOption", headerCell, "selectOption");
   }
 };
 
@@ -530,19 +555,19 @@
   }
 };
 
-orp.TablePlugin.prototype._clickOnAddColumnButton = function(eventObject) {
-  var popupMenu = dojo.widget.createWidget("PopupMenu2", {}, null);
-  var listOfAttributes = this.getWorld().getAttributes();
-  for (var i in listOfAttributes) {
-    var attribute = listOfAttributes[i];
-    if (!orp.util.isObjectInSet(attribute, this._displayAttributes)) {
-      var attributeName = attribute.getDisplayString();
-      var menuItem = dojo.widget.createWidget("MenuItem2", {caption: attributeName}, null);
-      dojo.event.connect(menuItem, "onClick",  orp.lang.bind(this, "_addOrRemoveOneColumn", attribute));
-      popupMenu.addChild(menuItem);
+orp.TablePlugin.getAttributeFromComboBoxValue = function(comboBoxValue, world) {
+  var listOfAttributes = world.getAttributes();
+  var attribute;
+  for (var i = 0; i < listOfAttributes.length; ++i) {
+    if (listOfAttributes[i].getDisplayName() == comboBoxValue) {
+      attribute = listOfAttributes[i];
+      break;
     }
   }
-  popupMenu.onOpen(eventObject);
+  if (i == listOfAttributes.length) {
+    attribute = world.newAttribute(comboBoxValue);
+  }
+  return attribute;
 };
 
 /*

Modified: trunk/source/base_style.css
===================================================================
--- trunk/source/base_style.css	2006-03-02 23:01:59 UTC (rev 458)
+++ trunk/source/base_style.css	2006-03-14 01:54:10 UTC (rev 459)
@@ -812,11 +812,30 @@
 }
 
 
+/****************************************/
+/* ComboBox styles                     */
 
+.simple_table td.comboBox {
+  padding: 0 0 0 0;
+  font-size: 1.0em;
+}
+
+.simple_table th.add_column {
+  height: 100%;
+  padding: 0 0 0 0;
+}
+
+table.dojoComboBox {
+  border-collapse: collapse;
+}
+table.dojoComboBox td {
+  background: rgb(90%, 90%, 100%);
+}
+
+table.dojoComboBox input.comboBoxInput {
+  background: rgb(90%, 90%, 100%);
+}
+
 /****************************************/
 /* END                                  */
 /****************************************/
-
-.add_column {
-  background: rgb(50%, 0%, 0%);
-}

Modified: trunk/source/model/READ_ME.txt
===================================================================
--- trunk/source/model/READ_ME.txt	2006-03-02 23:01:59 UTC (rev 458)
+++ trunk/source/model/READ_ME.txt	2006-03-14 01:54:10 UTC (rev 459)
@@ -37,30 +37,38 @@
 
 Item methods --------------------
 
-  item.addEntryForAttribute() 
   item.addEntry()
   item.replaceEntry()
-  item.replaceEntryWithEntryForAttribute()
+  item.addConnectionEntry()
   
   item.getAttributes()
   item.getEntriesForAttribute()
   item.getEntries()
+  item.getValuesForAttribute()
+  item.hasAttributeValue()
   
   item.getDisplayName()
   item.getNameEntries()
   item.getShortNameEntries()
+  item.getDisplayString()
+  item.getDisplayStringForEntry()
+  item.toString()
+  item.doesStringMatchName()
   
+  item.getSingleEntryFromAttribute()
+  item.getSingleValueFromAttribute()
+  item.getSingleStringValueFromAttribute()
+  
   item.isInCategory()
-  item.reorderBetween()
+  item.assignToCategory()
+  item.getFirstCategory()
   
-  item.hasBeenDeleted()
-  item.voteToDelete()
-  item.voteToRetain()
-  
   item.addObserver()
   item.removeObserver()
-
   
+  item.isProvisional()
+  
+  
 Entry methods ------------------- 
 
   entry.getValue()

Modified: trunk/source/model/World.js
===================================================================
--- trunk/source/model/World.js	2006-03-02 23:01:59 UTC (rev 458)
+++ trunk/source/model/World.js	2006-03-14 01:54:10 UTC (rev 459)
@@ -748,6 +748,9 @@
   var item = this._archive.newItem(name, observer);
   var categoryCalledAttribute = this.getCategoryCalledAttribute();
   item.assignToCategory(categoryCalledAttribute);
+  var attributeCalledExpectedType = this.getAttributeCalledExpectedType();
+  var typeCalledText = this.getTypeCalledText();
+  item.addEntry({attribute: attributeCalledExpectedType, value: typeCalledText});
   this.endTransaction();
   return item;
 };

Modified: trunk/source/view/LoginView.js
===================================================================
--- trunk/source/view/LoginView.js	2006-03-02 23:01:59 UTC (rev 458)
+++ trunk/source/view/LoginView.js	2006-03-14 01:54:10 UTC (rev 459)
@@ -233,7 +233,7 @@
  * @scope    private instance method
  */
 orp.view.LoginView.prototype._signinPasswordKeyPress = function(eventObject) {
-  // see if <return> is pressed, if so, similate clicking on sign in button
+  // see if <return> is pressed, if so, simulate clicking on sign in button
   if (eventObject.keyCode == orp.util.ASCII.RETURN) {
     this._clickOnSignInButton(eventObject);
   }
@@ -246,7 +246,7 @@
  * @scope    private instance method
  */
 orp.view.LoginView.prototype._createAccountPasswordKeyPress = function(eventObject) {
-  // see if <return> is pressed, if so, similate clicking on sign in button
+  // see if <return> is pressed, if so, simulate clicking on sign in button
   if (eventObject.keyCode == orp.util.ASCII.RETURN) {
     this._clickOnNewAcctButton(eventObject);
   }



From mignon at berlios.de  Tue Mar 14 05:24:52 2006
From: mignon at berlios.de (mignon at BerliOS)
Date: Tue, 14 Mar 2006 05:24:52 +0100
Subject: [openrecord-svn] r460 - in trunk/source: . model
Message-ID: <200603140424.k2E4Oqxa021522@sheep.berlios.de>

Author: mignon
Date: 2006-03-14 05:24:28 +0100 (Tue, 14 Mar 2006)
New Revision: 460

Modified:
   trunk/source/DetailPlugin.js
   trunk/source/TablePlugin.js
   trunk/source/model/World.js
Log:
Undid the change to orp.model.World.prototype.newAttribute that set the expected type to Text, and instead do that in orp.TablePlugin.getAttributeFromComboBoxValue and orp.DetailPlugin.getAttributeFromComboBoxValue.  Removed some no longer needed code in TablePlugin.  Made some lint fixes.


Modified: trunk/source/DetailPlugin.js
===================================================================
--- trunk/source/DetailPlugin.js	2006-03-14 01:54:10 UTC (rev 459)
+++ trunk/source/DetailPlugin.js	2006-03-14 04:24:28 UTC (rev 460)
@@ -168,14 +168,15 @@
     var cssLine = "comboBox";
     var newAttributeCell = orp.view.View.appendNewElement(newRow, "td", cssLine);
     newAttributeCell.superView = this;
-    var listOfAttributes = this.getWorld().getAttributes();
+    listOfAttributes = this.getWorld().getAttributes();
     
     var comboData = new Array();
     var j = 0;
     for (var i = 0; i < listOfAttributes.length; ++i) {
       // Only list attributes that aren't already in the table.
-      if (inItem.getSingleEntryFromAttribute(listOfAttributes[i]) == null) {
-        comboData[j++] = new Array(listOfAttributes[i].getDisplayName(), listOfAttributes[i].getUuidString());
+      if (inItem.getSingleEntryFromAttribute(listOfAttributes[i]) === null) {
+        comboData[j] = new Array(listOfAttributes[i].getDisplayName(), listOfAttributes[i].getUuidString());
+        ++j;
       }
     }
     var comboBox = dojo.widget.createWidget("ComboBox", {}, newAttributeCell, "last");
@@ -223,6 +224,9 @@
   }
   if (i == listOfAttributes.length) {
     attribute = world.newAttribute(comboBoxValue);
+    var attributeCalledExpectedType = world.getAttributeCalledExpectedType();
+    var typeCalledText = world.getTypeCalledText();
+    attribute.addEntry({attribute: attributeCalledExpectedType, value: typeCalledText});
   }
   return attribute;
 };

Modified: trunk/source/TablePlugin.js
===================================================================
--- trunk/source/TablePlugin.js	2006-03-14 01:54:10 UTC (rev 459)
+++ trunk/source/TablePlugin.js	2006-03-14 04:24:28 UTC (rev 460)
@@ -225,56 +225,36 @@
   var headerCell = orp.view.View.appendNewElement(headerRow, "th", cssClass);
   headerCell.superView = this;
   
-  var ADD_COLUMN_CONTROL_USES_HTML_INSTEAD_OF_DOJO = false;
-  if (ADD_COLUMN_CONTROL_USES_HTML_INSTEAD_OF_DOJO) {
-    var emptySpan = orp.view.View.appendNewElement(headerCell, "span");
-    orp.view.View.appendNewTextNode(emptySpan, " ");
-    orp.view.View.appendNewElement(headerCell, "br");
-    var selectElt = orp.view.View.appendNewElement(headerCell, "select");
-    var listOfAttributes = this.getWorld().getAttributes();
-    var optionElt = orp.view.View.appendNewElement(selectElt, "option");
-    optionElt.text = "Add column...";
-    for (var i in listOfAttributes) {
-      var attribute = listOfAttributes[i];
-      if (!orp.util.isObjectInSet(attribute, this._displayAttributes)) {
-        optionElt = orp.view.View.appendNewElement(selectElt, "option");
-        optionElt.text += attribute.getDisplayString();
-        optionElt.value = attribute.getUuidString();
-        dojo.event.connect(optionElt, "onclick", this, "_attributeEditorChanged");
-      }
+  var listOfAttributes = this.getWorld().getAttributes();    
+  var comboData = new Array();
+  var j = 0;
+  for (var i = 0; i < listOfAttributes.length; ++i) {
+    var attribute = listOfAttributes[i];
+    if (!orp.util.isObjectInSet(attribute, this._displayAttributes)) {
+      comboData[j] = new Array(listOfAttributes[i].getDisplayName(), listOfAttributes[i].getUuidString());
+      ++j;
     }
-    this._selectElement = selectElt;
-  } else {
-    var listOfAttributes = this.getWorld().getAttributes();    
-    var comboData = new Array();
-    var j = 0;
-    for (var i = 0; i < listOfAttributes.length; ++i) {
-      var attribute = listOfAttributes[i];
-      if (!orp.util.isObjectInSet(attribute, this._displayAttributes)) {
-        comboData[j++] = new Array(listOfAttributes[i].getDisplayName(), listOfAttributes[i].getUuidString());
-      }
+  }
+  var comboBox = dojo.widget.createWidget("ComboBox", {}, headerCell, "last");
+  var provider = comboBox.dataProvider;
+  provider.setData(comboData);
+  
+  var _this = this;
+  headerCell.onComboBoxKeyUp = function(evt) {
+    if (evt.keyCode != orp.util.ASCII.RETURN) {
+      return;
     }
-    var comboBox = dojo.widget.createWidget("ComboBox", {}, headerCell, "last");
-    var provider = comboBox.dataProvider;
-    provider.setData(comboData);
-    
-    var _this = this;
-    headerCell.onComboBoxKeyUp = function(evt) {
-      if (evt.keyCode != orp.util.ASCII.RETURN) {
-        return;
-      }
-      var attribute = orp.TablePlugin.getAttributeFromComboBoxValue(evt.target.value, this.superView.getWorld());
+    var attribute = orp.TablePlugin.getAttributeFromComboBoxValue(evt.target.value, this.superView.getWorld());
+    _this._addOrRemoveOneColumn(attribute);
+  };
+  dojo.event.connect(comboBox, "onKeyUp", headerCell, "onComboBoxKeyUp");
+  headerCell.selectOption = function(evt) {
+    if (evt && evt.type == "click" && evt.target && evt.target.textContent) {
+      var attribute = orp.TablePlugin.getAttributeFromComboBoxValue(evt.target.textContent, this.superView.getWorld());
       _this._addOrRemoveOneColumn(attribute);
-    };
-    dojo.event.connect(comboBox, "onKeyUp", headerCell, "onComboBoxKeyUp");
-    headerCell.selectOption = function(evt) {
-      if (evt && evt.type == "click" && evt.target && evt.target.textContent) {
-        var attribute = orp.TablePlugin.getAttributeFromComboBoxValue(evt.target.textContent, this.superView.getWorld());
-        _this._addOrRemoveOneColumn(attribute);
-      }
-    };
-    dojo.event.connect(comboBox, "selectOption", headerCell, "selectOption");
-  }
+    }
+  };
+  dojo.event.connect(comboBox, "selectOption", headerCell, "selectOption");
 };
 
 /**
@@ -566,6 +546,9 @@
   }
   if (i == listOfAttributes.length) {
     attribute = world.newAttribute(comboBoxValue);
+    var attributeCalledExpectedType = world.getAttributeCalledExpectedType();
+    var typeCalledText = world.getTypeCalledText();
+    attribute.addEntry({attribute: attributeCalledExpectedType, value: typeCalledText});
   }
   return attribute;
 };
@@ -822,20 +805,6 @@
 };
 
 
-/**
- * Called when the user clicks on attribute editor item, either to add or 
- * remove attribute column
- * 
- * @scope    private class method
- */
-orp.TablePlugin.prototype._attributeEditorChanged = function(eventObject) {
-  var attributeUuid = eventObject.target.value;
-  if (attributeUuid) {
-    var changedAttribute = this.getWorld().getItemFromUuid(attributeUuid);
-    this._addOrRemoveOneColumn(changedAttribute);
-  } 
-};
-
 // Add a column to the table, or remove a column from the table.
 orp.TablePlugin.prototype._addOrRemoveOneColumn = function(attribute) {
   var changedAttribute = attribute;

Modified: trunk/source/model/World.js
===================================================================
--- trunk/source/model/World.js	2006-03-14 01:54:10 UTC (rev 459)
+++ trunk/source/model/World.js	2006-03-14 04:24:28 UTC (rev 460)
@@ -748,9 +748,6 @@
   var item = this._archive.newItem(name, observer);
   var categoryCalledAttribute = this.getCategoryCalledAttribute();
   item.assignToCategory(categoryCalledAttribute);
-  var attributeCalledExpectedType = this.getAttributeCalledExpectedType();
-  var typeCalledText = this.getTypeCalledText();
-  item.addEntry({attribute: attributeCalledExpectedType, value: typeCalledText});
   this.endTransaction();
   return item;
 };



From skinner at berlios.de  Mon Mar 27 21:46:51 2006
From: skinner at berlios.de (skinner at BerliOS)
Date: Mon, 27 Mar 2006 21:46:51 +0200
Subject: [openrecord-svn] r461 - trunk/web_pages/content
Message-ID: <200603271946.k2RJkpB6017975@sheep.berlios.de>

Author: skinner
Date: 2006-03-27 21:46:48 +0200 (Mon, 27 Mar 2006)
New Revision: 461

Modified:
   trunk/web_pages/content/about.html
Log:
updated the about.html page on the web site

Modified: trunk/web_pages/content/about.html
===================================================================
--- trunk/web_pages/content/about.html	2006-03-14 04:24:28 UTC (rev 460)
+++ trunk/web_pages/content/about.html	2006-03-27 19:46:48 UTC (rev 461)
@@ -1,22 +1,24 @@
 <h1>About the OpenRecord project</h1>
 <div>
-  <p>The goal of the OpenRecord project is to create open source software.  We're 
-  making a web-based collaboration system, somewhat like a wiki. To read 
-  about what the software is supposed to do, see the <a href="spec.html">spec page</a>.</p>
+  <p>The goal of the project is to create an open source software product.  
+  The product we're making is a wiki engine, but where most wiki engines are geared
+  toward pages of text, OpenRecord is geared toward loosely-structured database content.</p>
 </div>
 <h2>History</h2>
-  <p>We started writing code for OpenRecord in February 2005.  In August 
-  2005 we made our first real demo documents, and we began giving demos of a
-  0.1 release.  In November 2005 we became a project of the Dojo Foundation, 
-  and now we're gradually working on porting the OpenRecord over to use more and
-  more of the Dojo toolkit.</p>
-<h2>Status (as of November 2005)</h2>
-  <p>We currently have two programmers working on OpenRecord part time, and we
-  hope to have two more programmers joining us in December 2005.  We're working 
-  on cleaning up our plugin API, and we hope to have a 0.2 developer release 
-  in early 2006 -- once that's in place we can invite people to start writing 
-  plugin views.  Later in 2006 we'll commit to a file format, and people will
-  be able to start actually saving their data in OpenRecord.</p>
+  <ul>
+    <li class="detail">February 2005 -- started writing code</li>
+    <li class="detail">August 2005 -- first demo documents, and first real demos</li>
+    <li class="detail">November 2005 -- became a project of the <a href="http://dojotoolkit.org" rel="external">Dojo Foundation</a></li>
+    <li class="detail">February 2006 -- first <a href="screencast.html">screencasts</a></li>
+    <li class="detail">2006 -- pick a server side datastore to use</li>
+    <li class="detail">2006 -- convert code to use more of the Dojo toolkit</li>
+  </ul>       
+<h2>Status (as of April 2006)</h2>
+  <p>We currently have two programmers working on OpenRecord part time, and we're
+  looking for more volunteers.  One of the main things we're doing now is looking at  
+  different server-side datastores.  Later this year we hope to commit to a single
+  datastore or file format, so people will be able to start actually saving their 
+  data in OpenRecord.</p>
 <h2>License</h2>
   <p>All of the code we're writing is available under open source licenses.
   Copyright rights to the OpenRecord have been relinquished using the 



